// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "db_message.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class ClientHeartBeatRequest;
class ClientHeartBeatResponse;

enum MSG_ACTION_TYPE {
  MSG_REQUEST = 0,
  MSG_RESPONSE = 1,
  MSG_NOTIFY = 2
};
bool MSG_ACTION_TYPE_IsValid(int value);
const MSG_ACTION_TYPE MSG_ACTION_TYPE_MIN = MSG_REQUEST;
const MSG_ACTION_TYPE MSG_ACTION_TYPE_MAX = MSG_NOTIFY;
const int MSG_ACTION_TYPE_ARRAYSIZE = MSG_ACTION_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_ACTION_TYPE_descriptor();
inline const ::std::string& MSG_ACTION_TYPE_Name(MSG_ACTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_ACTION_TYPE_descriptor(), value);
}
inline bool MSG_ACTION_TYPE_Parse(
    const ::std::string& name, MSG_ACTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_ACTION_TYPE>(
    MSG_ACTION_TYPE_descriptor(), name, value);
}
enum MessageType {
  MSG_SOCCER_PLAYER_INFO = 1,
  MSG_HEART_BEAT = 2,
  MSG_CLIENT_LOGIN = 3,
  MSG_GATE_SERVER_REGISTER = 4
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MSG_SOCCER_PLAYER_INFO;
const MessageType MessageType_MAX = MSG_GATE_SERVER_REGISTER;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
// ===================================================================

class ClientHeartBeatRequest : public ::google::protobuf::Message {
 public:
  ClientHeartBeatRequest();
  virtual ~ClientHeartBeatRequest();

  ClientHeartBeatRequest(const ClientHeartBeatRequest& from);

  inline ClientHeartBeatRequest& operator=(const ClientHeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHeartBeatRequest& default_instance();

  void Swap(ClientHeartBeatRequest* other);

  // implements Message ----------------------------------------------

  ClientHeartBeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHeartBeatRequest& from);
  void MergeFrom(const ClientHeartBeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 client_time = 1;
  inline bool has_client_time() const;
  inline void clear_client_time();
  static const int kClientTimeFieldNumber = 1;
  inline ::google::protobuf::int32 client_time() const;
  inline void set_client_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientHeartBeatRequest)
 private:
  inline void set_has_client_time();
  inline void clear_has_client_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 client_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientHeartBeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClientHeartBeatResponse : public ::google::protobuf::Message {
 public:
  ClientHeartBeatResponse();
  virtual ~ClientHeartBeatResponse();

  ClientHeartBeatResponse(const ClientHeartBeatResponse& from);

  inline ClientHeartBeatResponse& operator=(const ClientHeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHeartBeatResponse& default_instance();

  void Swap(ClientHeartBeatResponse* other);

  // implements Message ----------------------------------------------

  ClientHeartBeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHeartBeatResponse& from);
  void MergeFrom(const ClientHeartBeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_time = 1;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  inline ::google::protobuf::int32 server_time() const;
  inline void set_server_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientHeartBeatResponse)
 private:
  inline void set_has_server_time();
  inline void clear_has_server_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 server_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientHeartBeatResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientHeartBeatRequest

// required int32 client_time = 1;
inline bool ClientHeartBeatRequest::has_client_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHeartBeatRequest::set_has_client_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHeartBeatRequest::clear_has_client_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHeartBeatRequest::clear_client_time() {
  client_time_ = 0;
  clear_has_client_time();
}
inline ::google::protobuf::int32 ClientHeartBeatRequest::client_time() const {
  return client_time_;
}
inline void ClientHeartBeatRequest::set_client_time(::google::protobuf::int32 value) {
  set_has_client_time();
  client_time_ = value;
}

// -------------------------------------------------------------------

// ClientHeartBeatResponse

// required int32 server_time = 1;
inline bool ClientHeartBeatResponse::has_server_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHeartBeatResponse::set_has_server_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHeartBeatResponse::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHeartBeatResponse::clear_server_time() {
  server_time_ = 0;
  clear_has_server_time();
}
inline ::google::protobuf::int32 ClientHeartBeatResponse::server_time() const {
  return server_time_;
}
inline void ClientHeartBeatResponse::set_server_time(::google::protobuf::int32 value) {
  set_has_server_time();
  server_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG_ACTION_TYPE>() {
  return ::MSG_ACTION_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {
  return ::MessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
