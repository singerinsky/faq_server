// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "db_message.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class ClientHeartBeatRequest;
class ClientHeartBeatResponse;
class ClientLoginRequest;
class ClientLoginResponse;
class ClientInitNotf;
class ClientMoveRequest;
class ClientMoveResponse;

enum MSG_ACTION_TYPE {
  MSG_REQUEST = 0,
  MSG_RESPONSE = 1,
  MSG_NOTIFY = 2
};
bool MSG_ACTION_TYPE_IsValid(int value);
const MSG_ACTION_TYPE MSG_ACTION_TYPE_MIN = MSG_REQUEST;
const MSG_ACTION_TYPE MSG_ACTION_TYPE_MAX = MSG_NOTIFY;
const int MSG_ACTION_TYPE_ARRAYSIZE = MSG_ACTION_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_ACTION_TYPE_descriptor();
inline const ::std::string& MSG_ACTION_TYPE_Name(MSG_ACTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_ACTION_TYPE_descriptor(), value);
}
inline bool MSG_ACTION_TYPE_Parse(
    const ::std::string& name, MSG_ACTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG_ACTION_TYPE>(
    MSG_ACTION_TYPE_descriptor(), name, value);
}
enum MessageType {
  MSG_SOCCER_PLAYER_INFO = 1,
  MSG_HEART_BEAT = 2,
  MSG_CLIENT_LOGIN = 3,
  MSG_GATE_SERVER_REGISTER = 4,
  MSG_INIT_CLIENT = 5,
  MSG_CLIENT_MOVE = 6
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MSG_SOCCER_PLAYER_INFO;
const MessageType MessageType_MAX = MSG_CLIENT_MOVE;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum DbMessageType {
  MSG_DB_COMMON = 10000
};
bool DbMessageType_IsValid(int value);
const DbMessageType DbMessageType_MIN = MSG_DB_COMMON;
const DbMessageType DbMessageType_MAX = MSG_DB_COMMON;
const int DbMessageType_ARRAYSIZE = DbMessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DbMessageType_descriptor();
inline const ::std::string& DbMessageType_Name(DbMessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DbMessageType_descriptor(), value);
}
inline bool DbMessageType_Parse(
    const ::std::string& name, DbMessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DbMessageType>(
    DbMessageType_descriptor(), name, value);
}
// ===================================================================

class ClientHeartBeatRequest : public ::google::protobuf::Message {
 public:
  ClientHeartBeatRequest();
  virtual ~ClientHeartBeatRequest();

  ClientHeartBeatRequest(const ClientHeartBeatRequest& from);

  inline ClientHeartBeatRequest& operator=(const ClientHeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHeartBeatRequest& default_instance();

  void Swap(ClientHeartBeatRequest* other);

  // implements Message ----------------------------------------------

  ClientHeartBeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHeartBeatRequest& from);
  void MergeFrom(const ClientHeartBeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 client_time = 1;
  inline bool has_client_time() const;
  inline void clear_client_time();
  static const int kClientTimeFieldNumber = 1;
  inline ::google::protobuf::int32 client_time() const;
  inline void set_client_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientHeartBeatRequest)
 private:
  inline void set_has_client_time();
  inline void clear_has_client_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 client_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientHeartBeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClientHeartBeatResponse : public ::google::protobuf::Message {
 public:
  ClientHeartBeatResponse();
  virtual ~ClientHeartBeatResponse();

  ClientHeartBeatResponse(const ClientHeartBeatResponse& from);

  inline ClientHeartBeatResponse& operator=(const ClientHeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientHeartBeatResponse& default_instance();

  void Swap(ClientHeartBeatResponse* other);

  // implements Message ----------------------------------------------

  ClientHeartBeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientHeartBeatResponse& from);
  void MergeFrom(const ClientHeartBeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_time = 1;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  inline ::google::protobuf::int32 server_time() const;
  inline void set_server_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientHeartBeatResponse)
 private:
  inline void set_has_server_time();
  inline void clear_has_server_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 server_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientHeartBeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class ClientLoginRequest : public ::google::protobuf::Message {
 public:
  ClientLoginRequest();
  virtual ~ClientLoginRequest();

  ClientLoginRequest(const ClientLoginRequest& from);

  inline ClientLoginRequest& operator=(const ClientLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginRequest& default_instance();

  void Swap(ClientLoginRequest* other);

  // implements Message ----------------------------------------------

  ClientLoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginRequest& from);
  void MergeFrom(const ClientLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);

  // required string token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:ClientLoginRequest)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::google::protobuf::int32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClientLoginResponse : public ::google::protobuf::Message {
 public:
  ClientLoginResponse();
  virtual ~ClientLoginResponse();

  ClientLoginResponse(const ClientLoginResponse& from);

  inline ClientLoginResponse& operator=(const ClientLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginResponse& default_instance();

  void Swap(ClientLoginResponse* other);

  // implements Message ----------------------------------------------

  ClientLoginResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientLoginResponse& from);
  void MergeFrom(const ClientLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientLoginResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientLoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class ClientInitNotf : public ::google::protobuf::Message {
 public:
  ClientInitNotf();
  virtual ~ClientInitNotf();

  ClientInitNotf(const ClientInitNotf& from);

  inline ClientInitNotf& operator=(const ClientInitNotf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientInitNotf& default_instance();

  void Swap(ClientInitNotf* other);

  // implements Message ----------------------------------------------

  ClientInitNotf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientInitNotf& from);
  void MergeFrom(const ClientInitNotf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required .DBUserInfo user_info = 2;
  inline bool has_user_info() const;
  inline void clear_user_info();
  static const int kUserInfoFieldNumber = 2;
  inline const ::DBUserInfo& user_info() const;
  inline ::DBUserInfo* mutable_user_info();
  inline ::DBUserInfo* release_user_info();
  inline void set_allocated_user_info(::DBUserInfo* user_info);

  // @@protoc_insertion_point(class_scope:ClientInitNotf)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_user_info();
  inline void clear_has_user_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBUserInfo* user_info_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientInitNotf* default_instance_;
};
// -------------------------------------------------------------------

class ClientMoveRequest : public ::google::protobuf::Message {
 public:
  ClientMoveRequest();
  virtual ~ClientMoveRequest();

  ClientMoveRequest(const ClientMoveRequest& from);

  inline ClientMoveRequest& operator=(const ClientMoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMoveRequest& default_instance();

  void Swap(ClientMoveRequest* other);

  // implements Message ----------------------------------------------

  ClientMoveRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientMoveRequest& from);
  void MergeFrom(const ClientMoveRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);

  // required int32 pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // required int32 pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientMoveRequest)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientMoveRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClientMoveResponse : public ::google::protobuf::Message {
 public:
  ClientMoveResponse();
  virtual ~ClientMoveResponse();

  ClientMoveResponse(const ClientMoveResponse& from);

  inline ClientMoveResponse& operator=(const ClientMoveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMoveResponse& default_instance();

  void Swap(ClientMoveResponse* other);

  // implements Message ----------------------------------------------

  ClientMoveResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientMoveResponse& from);
  void MergeFrom(const ClientMoveResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // required int32 map_id = 2;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);

  // required int32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // required int32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientMoveResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static ClientMoveResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientHeartBeatRequest

// required int32 client_time = 1;
inline bool ClientHeartBeatRequest::has_client_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHeartBeatRequest::set_has_client_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHeartBeatRequest::clear_has_client_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHeartBeatRequest::clear_client_time() {
  client_time_ = 0;
  clear_has_client_time();
}
inline ::google::protobuf::int32 ClientHeartBeatRequest::client_time() const {
  return client_time_;
}
inline void ClientHeartBeatRequest::set_client_time(::google::protobuf::int32 value) {
  set_has_client_time();
  client_time_ = value;
}

// -------------------------------------------------------------------

// ClientHeartBeatResponse

// required int32 server_time = 1;
inline bool ClientHeartBeatResponse::has_server_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientHeartBeatResponse::set_has_server_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientHeartBeatResponse::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientHeartBeatResponse::clear_server_time() {
  server_time_ = 0;
  clear_has_server_time();
}
inline ::google::protobuf::int32 ClientHeartBeatResponse::server_time() const {
  return server_time_;
}
inline void ClientHeartBeatResponse::set_server_time(::google::protobuf::int32 value) {
  set_has_server_time();
  server_time_ = value;
}

// -------------------------------------------------------------------

// ClientLoginRequest

// required int32 role_id = 1;
inline bool ClientLoginRequest::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginRequest::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginRequest::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginRequest::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 ClientLoginRequest::role_id() const {
  return role_id_;
}
inline void ClientLoginRequest::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required string token = 2;
inline bool ClientLoginRequest::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientLoginRequest::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientLoginRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientLoginRequest::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& ClientLoginRequest::token() const {
  return *token_;
}
inline void ClientLoginRequest::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void ClientLoginRequest::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void ClientLoginRequest::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientLoginRequest::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* ClientLoginRequest::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ClientLoginRequest::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ClientLoginResponse

// required int32 ret = 1;
inline bool ClientLoginResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientLoginResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientLoginResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientLoginResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ClientLoginResponse::ret() const {
  return ret_;
}
inline void ClientLoginResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// ClientInitNotf

// required int32 ret = 1;
inline bool ClientInitNotf::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientInitNotf::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientInitNotf::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientInitNotf::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ClientInitNotf::ret() const {
  return ret_;
}
inline void ClientInitNotf::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required .DBUserInfo user_info = 2;
inline bool ClientInitNotf::has_user_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientInitNotf::set_has_user_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientInitNotf::clear_has_user_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientInitNotf::clear_user_info() {
  if (user_info_ != NULL) user_info_->::DBUserInfo::Clear();
  clear_has_user_info();
}
inline const ::DBUserInfo& ClientInitNotf::user_info() const {
  return user_info_ != NULL ? *user_info_ : *default_instance_->user_info_;
}
inline ::DBUserInfo* ClientInitNotf::mutable_user_info() {
  set_has_user_info();
  if (user_info_ == NULL) user_info_ = new ::DBUserInfo;
  return user_info_;
}
inline ::DBUserInfo* ClientInitNotf::release_user_info() {
  clear_has_user_info();
  ::DBUserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void ClientInitNotf::set_allocated_user_info(::DBUserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    set_has_user_info();
  } else {
    clear_has_user_info();
  }
}

// -------------------------------------------------------------------

// ClientMoveRequest

// required int32 map_id = 1;
inline bool ClientMoveRequest::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMoveRequest::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMoveRequest::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMoveRequest::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 ClientMoveRequest::map_id() const {
  return map_id_;
}
inline void ClientMoveRequest::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
}

// required int32 pos_x = 2;
inline bool ClientMoveRequest::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMoveRequest::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMoveRequest::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMoveRequest::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 ClientMoveRequest::pos_x() const {
  return pos_x_;
}
inline void ClientMoveRequest::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
}

// required int32 pos_y = 3;
inline bool ClientMoveRequest::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMoveRequest::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientMoveRequest::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientMoveRequest::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 ClientMoveRequest::pos_y() const {
  return pos_y_;
}
inline void ClientMoveRequest::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
}

// -------------------------------------------------------------------

// ClientMoveResponse

// required int32 ret = 1;
inline bool ClientMoveResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMoveResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMoveResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMoveResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ClientMoveResponse::ret() const {
  return ret_;
}
inline void ClientMoveResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// required int32 map_id = 2;
inline bool ClientMoveResponse::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMoveResponse::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMoveResponse::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMoveResponse::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 ClientMoveResponse::map_id() const {
  return map_id_;
}
inline void ClientMoveResponse::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
}

// required int32 pos_x = 3;
inline bool ClientMoveResponse::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMoveResponse::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientMoveResponse::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientMoveResponse::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 ClientMoveResponse::pos_x() const {
  return pos_x_;
}
inline void ClientMoveResponse::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
}

// required int32 pos_y = 4;
inline bool ClientMoveResponse::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientMoveResponse::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientMoveResponse::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientMoveResponse::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 ClientMoveResponse::pos_y() const {
  return pos_y_;
}
inline void ClientMoveResponse::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MSG_ACTION_TYPE>() {
  return ::MSG_ACTION_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageType>() {
  return ::MessageType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DbMessageType>() {
  return ::DbMessageType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
