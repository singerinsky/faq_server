// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_info.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "role_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* db_role_info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  db_role_info_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_role_5finfo_2eproto() {
  protobuf_AddDesc_role_5finfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "role_info.proto");
  GOOGLE_CHECK(file != NULL);
  db_role_info_descriptor_ = file->message_type(0);
  static const int db_role_info_offsets_[46] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, gender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, job_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, role_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, role_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, costume_tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, coupon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, diamond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, vip_end_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, map_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, map_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, map_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, last_map_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, last_map_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, last_map_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, team_create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, bag_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, depot_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, buddy_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, lineup_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, default_lineup_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, lineup_capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, login_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, last_logoff_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, login_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, instance_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, instance_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, guild_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, guild_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, guild_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, phy_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, extra_phy_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, time_to_recover_phy_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, time_to_recover_extra_phy_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, renown_),
  };
  db_role_info_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      db_role_info_descriptor_,
      db_role_info::default_instance_,
      db_role_info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(db_role_info, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(db_role_info));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_role_5finfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    db_role_info_descriptor_, &db_role_info::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_role_5finfo_2eproto() {
  delete db_role_info::default_instance_;
  delete db_role_info_reflection_;
}

void protobuf_AddDesc_role_5finfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017role_info.proto\"\245\007\n\014db_role_info\022\017\n\007ro"
    "le_id\030\001 \002(\005\022\013\n\003uid\030\002 \002(\005\022\013\n\003tid\030\003 \002(\005\022\014\n"
    "\004name\030\004 \002(\t\022\016\n\006gender\030\005 \002(\005\022\020\n\010job_type\030"
    "\006 \002(\005\022\022\n\nrole_level\030\007 \002(\005\022\020\n\010role_exp\030\010 "
    "\002(\005\022\023\n\013costume_tid\030\t \002(\005\022\r\n\005title\030\n \002(\005\022"
    "\014\n\004coin\030\013 \002(\005\022\016\n\006coupon\030\014 \002(\005\022\017\n\007diamond"
    "\030\r \002(\005\022\022\n\nvip_end_ts\030\016 \002(\005\022\021\n\tvip_level\030"
    "\017 \002(\005\022\016\n\006map_id\030\020 \002(\005\022\r\n\005map_x\030\021 \002(\005\022\r\n\005"
    "map_y\030\022 \002(\005\022\023\n\013last_map_id\030\023 \002(\005\022\022\n\nlast"
    "_map_x\030\024 \002(\005\022\022\n\nlast_map_y\030\025 \002(\005\022\014\n\004flag"
    "\030\026 \002(\005\022\016\n\006status\030\027 \002(\005\022\021\n\tserver_id\030\030 \002("
    "\005\022\023\n\013create_time\030\031 \002(\005\022\017\n\007team_id\030\032 \002(\005\022"
    "\030\n\020team_create_time\030\033 \002(\005\022\020\n\010bag_size\030\034 "
    "\002(\005\022\022\n\ndepot_size\030\035 \002(\005\022\022\n\nbuddy_size\030\036 "
    "\002(\005\022\023\n\013lineup_size\030\037 \002(\005\022\031\n\021default_line"
    "up_id\030  \002(\005\022\027\n\017lineup_capacity\030! \002(\005\022\022\n\n"
    "login_time\030\" \002(\005\022\030\n\020last_logoff_time\030# \002"
    "(\005\022\020\n\010login_ip\030$ \002(\t\022\026\n\016instance_count\030%"
    " \002(\005\022\025\n\rinstance_time\030& \002(\005\022\020\n\010guild_id\030"
    "\' \002(\005\022\022\n\nguild_time\030( \002(\005\022\022\n\nguild_name\030"
    ") \002(\t\022\024\n\014phy_strength\030* \002(\005\022\032\n\022extra_phy"
    "_strength\030+ \002(\005\022$\n\034time_to_recover_phy_s"
    "trength\030, \002(\005\022*\n\"time_to_recover_extra_p"
    "hy_strength\030- \002(\005\022\016\n\006renown\030. \002(\005", 953);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "role_info.proto", &protobuf_RegisterTypes);
  db_role_info::default_instance_ = new db_role_info();
  db_role_info::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_role_5finfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_role_5finfo_2eproto {
  StaticDescriptorInitializer_role_5finfo_2eproto() {
    protobuf_AddDesc_role_5finfo_2eproto();
  }
} static_descriptor_initializer_role_5finfo_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int db_role_info::kRoleIdFieldNumber;
const int db_role_info::kUidFieldNumber;
const int db_role_info::kTidFieldNumber;
const int db_role_info::kNameFieldNumber;
const int db_role_info::kGenderFieldNumber;
const int db_role_info::kJobTypeFieldNumber;
const int db_role_info::kRoleLevelFieldNumber;
const int db_role_info::kRoleExpFieldNumber;
const int db_role_info::kCostumeTidFieldNumber;
const int db_role_info::kTitleFieldNumber;
const int db_role_info::kCoinFieldNumber;
const int db_role_info::kCouponFieldNumber;
const int db_role_info::kDiamondFieldNumber;
const int db_role_info::kVipEndTsFieldNumber;
const int db_role_info::kVipLevelFieldNumber;
const int db_role_info::kMapIdFieldNumber;
const int db_role_info::kMapXFieldNumber;
const int db_role_info::kMapYFieldNumber;
const int db_role_info::kLastMapIdFieldNumber;
const int db_role_info::kLastMapXFieldNumber;
const int db_role_info::kLastMapYFieldNumber;
const int db_role_info::kFlagFieldNumber;
const int db_role_info::kStatusFieldNumber;
const int db_role_info::kServerIdFieldNumber;
const int db_role_info::kCreateTimeFieldNumber;
const int db_role_info::kTeamIdFieldNumber;
const int db_role_info::kTeamCreateTimeFieldNumber;
const int db_role_info::kBagSizeFieldNumber;
const int db_role_info::kDepotSizeFieldNumber;
const int db_role_info::kBuddySizeFieldNumber;
const int db_role_info::kLineupSizeFieldNumber;
const int db_role_info::kDefaultLineupIdFieldNumber;
const int db_role_info::kLineupCapacityFieldNumber;
const int db_role_info::kLoginTimeFieldNumber;
const int db_role_info::kLastLogoffTimeFieldNumber;
const int db_role_info::kLoginIpFieldNumber;
const int db_role_info::kInstanceCountFieldNumber;
const int db_role_info::kInstanceTimeFieldNumber;
const int db_role_info::kGuildIdFieldNumber;
const int db_role_info::kGuildTimeFieldNumber;
const int db_role_info::kGuildNameFieldNumber;
const int db_role_info::kPhyStrengthFieldNumber;
const int db_role_info::kExtraPhyStrengthFieldNumber;
const int db_role_info::kTimeToRecoverPhyStrengthFieldNumber;
const int db_role_info::kTimeToRecoverExtraPhyStrengthFieldNumber;
const int db_role_info::kRenownFieldNumber;
#endif  // !_MSC_VER

db_role_info::db_role_info()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void db_role_info::InitAsDefaultInstance() {
}

db_role_info::db_role_info(const db_role_info& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void db_role_info::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = 0;
  uid_ = 0;
  tid_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gender_ = 0;
  job_type_ = 0;
  role_level_ = 0;
  role_exp_ = 0;
  costume_tid_ = 0;
  title_ = 0;
  coin_ = 0;
  coupon_ = 0;
  diamond_ = 0;
  vip_end_ts_ = 0;
  vip_level_ = 0;
  map_id_ = 0;
  map_x_ = 0;
  map_y_ = 0;
  last_map_id_ = 0;
  last_map_x_ = 0;
  last_map_y_ = 0;
  flag_ = 0;
  status_ = 0;
  server_id_ = 0;
  create_time_ = 0;
  team_id_ = 0;
  team_create_time_ = 0;
  bag_size_ = 0;
  depot_size_ = 0;
  buddy_size_ = 0;
  lineup_size_ = 0;
  default_lineup_id_ = 0;
  lineup_capacity_ = 0;
  login_time_ = 0;
  last_logoff_time_ = 0;
  login_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  instance_count_ = 0;
  instance_time_ = 0;
  guild_id_ = 0;
  guild_time_ = 0;
  guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  phy_strength_ = 0;
  extra_phy_strength_ = 0;
  time_to_recover_phy_strength_ = 0;
  time_to_recover_extra_phy_strength_ = 0;
  renown_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

db_role_info::~db_role_info() {
  SharedDtor();
}

void db_role_info::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (login_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete login_ip_;
  }
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    delete guild_name_;
  }
  if (this != default_instance_) {
  }
}

void db_role_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* db_role_info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return db_role_info_descriptor_;
}

const db_role_info& db_role_info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_5finfo_2eproto();
  return *default_instance_;
}

db_role_info* db_role_info::default_instance_ = NULL;

db_role_info* db_role_info::New() const {
  return new db_role_info;
}

void db_role_info::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = 0;
    uid_ = 0;
    tid_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    gender_ = 0;
    job_type_ = 0;
    role_level_ = 0;
    role_exp_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    costume_tid_ = 0;
    title_ = 0;
    coin_ = 0;
    coupon_ = 0;
    diamond_ = 0;
    vip_end_ts_ = 0;
    vip_level_ = 0;
    map_id_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    map_x_ = 0;
    map_y_ = 0;
    last_map_id_ = 0;
    last_map_x_ = 0;
    last_map_y_ = 0;
    flag_ = 0;
    status_ = 0;
    server_id_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    create_time_ = 0;
    team_id_ = 0;
    team_create_time_ = 0;
    bag_size_ = 0;
    depot_size_ = 0;
    buddy_size_ = 0;
    lineup_size_ = 0;
    default_lineup_id_ = 0;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    lineup_capacity_ = 0;
    login_time_ = 0;
    last_logoff_time_ = 0;
    if (has_login_ip()) {
      if (login_ip_ != &::google::protobuf::internal::kEmptyString) {
        login_ip_->clear();
      }
    }
    instance_count_ = 0;
    instance_time_ = 0;
    guild_id_ = 0;
    guild_time_ = 0;
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (has_guild_name()) {
      if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
        guild_name_->clear();
      }
    }
    phy_strength_ = 0;
    extra_phy_strength_ = 0;
    time_to_recover_phy_strength_ = 0;
    time_to_recover_extra_phy_strength_ = 0;
    renown_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool db_role_info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_uid;
        break;
      }

      // required int32 uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_tid;
        break;
      }

      // required int32 tid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
          set_has_tid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gender;
        break;
      }

      // required int32 gender = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gender_)));
          set_has_gender();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_job_type;
        break;
      }

      // required int32 job_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_job_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &job_type_)));
          set_has_job_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_role_level;
        break;
      }

      // required int32 role_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_role_exp;
        break;
      }

      // required int32 role_exp = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_exp_)));
          set_has_role_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_costume_tid;
        break;
      }

      // required int32 costume_tid = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_costume_tid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &costume_tid_)));
          set_has_costume_tid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_title;
        break;
      }

      // required int32 title = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_title:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &title_)));
          set_has_title();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_coin;
        break;
      }

      // required int32 coin = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_coupon;
        break;
      }

      // required int32 coupon = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coupon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coupon_)));
          set_has_coupon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_diamond;
        break;
      }

      // required int32 diamond = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_diamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diamond_)));
          set_has_diamond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_vip_end_ts;
        break;
      }

      // required int32 vip_end_ts = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_end_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_end_ts_)));
          set_has_vip_end_ts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_vip_level;
        break;
      }

      // required int32 vip_level = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_level_)));
          set_has_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_map_id;
        break;
      }

      // required int32 map_id = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_map_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_id_)));
          set_has_map_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_map_x;
        break;
      }

      // required int32 map_x = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_map_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_x_)));
          set_has_map_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_map_y;
        break;
      }

      // required int32 map_y = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_map_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_y_)));
          set_has_map_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_last_map_id;
        break;
      }

      // required int32 last_map_id = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_map_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_map_id_)));
          set_has_last_map_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_last_map_x;
        break;
      }

      // required int32 last_map_x = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_map_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_map_x_)));
          set_has_last_map_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_last_map_y;
        break;
      }

      // required int32 last_map_y = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_map_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_map_y_)));
          set_has_last_map_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_flag;
        break;
      }

      // required int32 flag = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_status;
        break;
      }

      // required int32 status = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_server_id;
        break;
      }

      // required int32 server_id = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_server_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_id_)));
          set_has_server_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_create_time;
        break;
      }

      // required int32 create_time = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &create_time_)));
          set_has_create_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_team_id;
        break;
      }

      // required int32 team_id = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_team_create_time;
        break;
      }

      // required int32 team_create_time = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_create_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_create_time_)));
          set_has_team_create_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_bag_size;
        break;
      }

      // required int32 bag_size = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bag_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bag_size_)));
          set_has_bag_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_depot_size;
        break;
      }

      // required int32 depot_size = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_depot_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depot_size_)));
          set_has_depot_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_buddy_size;
        break;
      }

      // required int32 buddy_size = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buddy_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buddy_size_)));
          set_has_buddy_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_lineup_size;
        break;
      }

      // required int32 lineup_size = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lineup_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineup_size_)));
          set_has_lineup_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_default_lineup_id;
        break;
      }

      // required int32 default_lineup_id = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_default_lineup_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default_lineup_id_)));
          set_has_default_lineup_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_lineup_capacity;
        break;
      }

      // required int32 lineup_capacity = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lineup_capacity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lineup_capacity_)));
          set_has_lineup_capacity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_login_time;
        break;
      }

      // required int32 login_time = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_login_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_time_)));
          set_has_login_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_last_logoff_time;
        break;
      }

      // required int32 last_logoff_time = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_logoff_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_logoff_time_)));
          set_has_last_logoff_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_login_ip;
        break;
      }

      // required string login_ip = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_login_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->login_ip().data(), this->login_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(296)) goto parse_instance_count;
        break;
      }

      // required int32 instance_count = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instance_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_count_)));
          set_has_instance_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_instance_time;
        break;
      }

      // required int32 instance_time = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_instance_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_time_)));
          set_has_instance_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_guild_id;
        break;
      }

      // required int32 guild_id = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guild_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_id_)));
          set_has_guild_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_guild_time;
        break;
      }

      // required int32 guild_time = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guild_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_time_)));
          set_has_guild_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(330)) goto parse_guild_name;
        break;
      }

      // required string guild_name = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_guild_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guild_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->guild_name().data(), this->guild_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_phy_strength;
        break;
      }

      // required int32 phy_strength = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_phy_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phy_strength_)));
          set_has_phy_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_extra_phy_strength;
        break;
      }

      // required int32 extra_phy_strength = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_extra_phy_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extra_phy_strength_)));
          set_has_extra_phy_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_time_to_recover_phy_strength;
        break;
      }

      // required int32 time_to_recover_phy_strength = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time_to_recover_phy_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_to_recover_phy_strength_)));
          set_has_time_to_recover_phy_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_time_to_recover_extra_phy_strength;
        break;
      }

      // required int32 time_to_recover_extra_phy_strength = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time_to_recover_extra_phy_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_to_recover_extra_phy_strength_)));
          set_has_time_to_recover_extra_phy_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_renown;
        break;
      }

      // required int32 renown = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_renown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &renown_)));
          set_has_renown();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void db_role_info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->role_id(), output);
  }

  // required int32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // required int32 tid = 3;
  if (has_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tid(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->name(), output);
  }

  // required int32 gender = 5;
  if (has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gender(), output);
  }

  // required int32 job_type = 6;
  if (has_job_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->job_type(), output);
  }

  // required int32 role_level = 7;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->role_level(), output);
  }

  // required int32 role_exp = 8;
  if (has_role_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->role_exp(), output);
  }

  // required int32 costume_tid = 9;
  if (has_costume_tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->costume_tid(), output);
  }

  // required int32 title = 10;
  if (has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->title(), output);
  }

  // required int32 coin = 11;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->coin(), output);
  }

  // required int32 coupon = 12;
  if (has_coupon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->coupon(), output);
  }

  // required int32 diamond = 13;
  if (has_diamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->diamond(), output);
  }

  // required int32 vip_end_ts = 14;
  if (has_vip_end_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->vip_end_ts(), output);
  }

  // required int32 vip_level = 15;
  if (has_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->vip_level(), output);
  }

  // required int32 map_id = 16;
  if (has_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->map_id(), output);
  }

  // required int32 map_x = 17;
  if (has_map_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->map_x(), output);
  }

  // required int32 map_y = 18;
  if (has_map_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->map_y(), output);
  }

  // required int32 last_map_id = 19;
  if (has_last_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->last_map_id(), output);
  }

  // required int32 last_map_x = 20;
  if (has_last_map_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->last_map_x(), output);
  }

  // required int32 last_map_y = 21;
  if (has_last_map_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->last_map_y(), output);
  }

  // required int32 flag = 22;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->flag(), output);
  }

  // required int32 status = 23;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->status(), output);
  }

  // required int32 server_id = 24;
  if (has_server_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->server_id(), output);
  }

  // required int32 create_time = 25;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->create_time(), output);
  }

  // required int32 team_id = 26;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->team_id(), output);
  }

  // required int32 team_create_time = 27;
  if (has_team_create_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->team_create_time(), output);
  }

  // required int32 bag_size = 28;
  if (has_bag_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->bag_size(), output);
  }

  // required int32 depot_size = 29;
  if (has_depot_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->depot_size(), output);
  }

  // required int32 buddy_size = 30;
  if (has_buddy_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->buddy_size(), output);
  }

  // required int32 lineup_size = 31;
  if (has_lineup_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->lineup_size(), output);
  }

  // required int32 default_lineup_id = 32;
  if (has_default_lineup_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->default_lineup_id(), output);
  }

  // required int32 lineup_capacity = 33;
  if (has_lineup_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(33, this->lineup_capacity(), output);
  }

  // required int32 login_time = 34;
  if (has_login_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->login_time(), output);
  }

  // required int32 last_logoff_time = 35;
  if (has_last_logoff_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->last_logoff_time(), output);
  }

  // required string login_ip = 36;
  if (has_login_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login_ip().data(), this->login_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->login_ip(), output);
  }

  // required int32 instance_count = 37;
  if (has_instance_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->instance_count(), output);
  }

  // required int32 instance_time = 38;
  if (has_instance_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->instance_time(), output);
  }

  // required int32 guild_id = 39;
  if (has_guild_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->guild_id(), output);
  }

  // required int32 guild_time = 40;
  if (has_guild_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->guild_time(), output);
  }

  // required string guild_name = 41;
  if (has_guild_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->guild_name().data(), this->guild_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      41, this->guild_name(), output);
  }

  // required int32 phy_strength = 42;
  if (has_phy_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->phy_strength(), output);
  }

  // required int32 extra_phy_strength = 43;
  if (has_extra_phy_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->extra_phy_strength(), output);
  }

  // required int32 time_to_recover_phy_strength = 44;
  if (has_time_to_recover_phy_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(44, this->time_to_recover_phy_strength(), output);
  }

  // required int32 time_to_recover_extra_phy_strength = 45;
  if (has_time_to_recover_extra_phy_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->time_to_recover_extra_phy_strength(), output);
  }

  // required int32 renown = 46;
  if (has_renown()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->renown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* db_role_info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->role_id(), target);
  }

  // required int32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // required int32 tid = 3;
  if (has_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tid(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // required int32 gender = 5;
  if (has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gender(), target);
  }

  // required int32 job_type = 6;
  if (has_job_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->job_type(), target);
  }

  // required int32 role_level = 7;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->role_level(), target);
  }

  // required int32 role_exp = 8;
  if (has_role_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->role_exp(), target);
  }

  // required int32 costume_tid = 9;
  if (has_costume_tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->costume_tid(), target);
  }

  // required int32 title = 10;
  if (has_title()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->title(), target);
  }

  // required int32 coin = 11;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->coin(), target);
  }

  // required int32 coupon = 12;
  if (has_coupon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->coupon(), target);
  }

  // required int32 diamond = 13;
  if (has_diamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->diamond(), target);
  }

  // required int32 vip_end_ts = 14;
  if (has_vip_end_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->vip_end_ts(), target);
  }

  // required int32 vip_level = 15;
  if (has_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->vip_level(), target);
  }

  // required int32 map_id = 16;
  if (has_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->map_id(), target);
  }

  // required int32 map_x = 17;
  if (has_map_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->map_x(), target);
  }

  // required int32 map_y = 18;
  if (has_map_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->map_y(), target);
  }

  // required int32 last_map_id = 19;
  if (has_last_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->last_map_id(), target);
  }

  // required int32 last_map_x = 20;
  if (has_last_map_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->last_map_x(), target);
  }

  // required int32 last_map_y = 21;
  if (has_last_map_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->last_map_y(), target);
  }

  // required int32 flag = 22;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->flag(), target);
  }

  // required int32 status = 23;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->status(), target);
  }

  // required int32 server_id = 24;
  if (has_server_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->server_id(), target);
  }

  // required int32 create_time = 25;
  if (has_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->create_time(), target);
  }

  // required int32 team_id = 26;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->team_id(), target);
  }

  // required int32 team_create_time = 27;
  if (has_team_create_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->team_create_time(), target);
  }

  // required int32 bag_size = 28;
  if (has_bag_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->bag_size(), target);
  }

  // required int32 depot_size = 29;
  if (has_depot_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->depot_size(), target);
  }

  // required int32 buddy_size = 30;
  if (has_buddy_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->buddy_size(), target);
  }

  // required int32 lineup_size = 31;
  if (has_lineup_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->lineup_size(), target);
  }

  // required int32 default_lineup_id = 32;
  if (has_default_lineup_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->default_lineup_id(), target);
  }

  // required int32 lineup_capacity = 33;
  if (has_lineup_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(33, this->lineup_capacity(), target);
  }

  // required int32 login_time = 34;
  if (has_login_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->login_time(), target);
  }

  // required int32 last_logoff_time = 35;
  if (has_last_logoff_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->last_logoff_time(), target);
  }

  // required string login_ip = 36;
  if (has_login_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->login_ip().data(), this->login_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->login_ip(), target);
  }

  // required int32 instance_count = 37;
  if (has_instance_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->instance_count(), target);
  }

  // required int32 instance_time = 38;
  if (has_instance_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->instance_time(), target);
  }

  // required int32 guild_id = 39;
  if (has_guild_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->guild_id(), target);
  }

  // required int32 guild_time = 40;
  if (has_guild_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->guild_time(), target);
  }

  // required string guild_name = 41;
  if (has_guild_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->guild_name().data(), this->guild_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->guild_name(), target);
  }

  // required int32 phy_strength = 42;
  if (has_phy_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->phy_strength(), target);
  }

  // required int32 extra_phy_strength = 43;
  if (has_extra_phy_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->extra_phy_strength(), target);
  }

  // required int32 time_to_recover_phy_strength = 44;
  if (has_time_to_recover_phy_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(44, this->time_to_recover_phy_strength(), target);
  }

  // required int32 time_to_recover_extra_phy_strength = 45;
  if (has_time_to_recover_extra_phy_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->time_to_recover_extra_phy_strength(), target);
  }

  // required int32 renown = 46;
  if (has_renown()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->renown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int db_role_info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_id());
    }

    // required int32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // required int32 tid = 3;
    if (has_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tid());
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required int32 gender = 5;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gender());
    }

    // required int32 job_type = 6;
    if (has_job_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->job_type());
    }

    // required int32 role_level = 7;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }

    // required int32 role_exp = 8;
    if (has_role_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_exp());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required int32 costume_tid = 9;
    if (has_costume_tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->costume_tid());
    }

    // required int32 title = 10;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->title());
    }

    // required int32 coin = 11;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // required int32 coupon = 12;
    if (has_coupon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coupon());
    }

    // required int32 diamond = 13;
    if (has_diamond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->diamond());
    }

    // required int32 vip_end_ts = 14;
    if (has_vip_end_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_end_ts());
    }

    // required int32 vip_level = 15;
    if (has_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_level());
    }

    // required int32 map_id = 16;
    if (has_map_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_id());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required int32 map_x = 17;
    if (has_map_x()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_x());
    }

    // required int32 map_y = 18;
    if (has_map_y()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_y());
    }

    // required int32 last_map_id = 19;
    if (has_last_map_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_map_id());
    }

    // required int32 last_map_x = 20;
    if (has_last_map_x()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_map_x());
    }

    // required int32 last_map_y = 21;
    if (has_last_map_y()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_map_y());
    }

    // required int32 flag = 22;
    if (has_flag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }

    // required int32 status = 23;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // required int32 server_id = 24;
    if (has_server_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->server_id());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required int32 create_time = 25;
    if (has_create_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->create_time());
    }

    // required int32 team_id = 26;
    if (has_team_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_id());
    }

    // required int32 team_create_time = 27;
    if (has_team_create_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_create_time());
    }

    // required int32 bag_size = 28;
    if (has_bag_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bag_size());
    }

    // required int32 depot_size = 29;
    if (has_depot_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->depot_size());
    }

    // required int32 buddy_size = 30;
    if (has_buddy_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buddy_size());
    }

    // required int32 lineup_size = 31;
    if (has_lineup_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lineup_size());
    }

    // required int32 default_lineup_id = 32;
    if (has_default_lineup_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->default_lineup_id());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required int32 lineup_capacity = 33;
    if (has_lineup_capacity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lineup_capacity());
    }

    // required int32 login_time = 34;
    if (has_login_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_time());
    }

    // required int32 last_logoff_time = 35;
    if (has_last_logoff_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_logoff_time());
    }

    // required string login_ip = 36;
    if (has_login_ip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->login_ip());
    }

    // required int32 instance_count = 37;
    if (has_instance_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instance_count());
    }

    // required int32 instance_time = 38;
    if (has_instance_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instance_time());
    }

    // required int32 guild_id = 39;
    if (has_guild_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guild_id());
    }

    // required int32 guild_time = 40;
    if (has_guild_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guild_time());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // required string guild_name = 41;
    if (has_guild_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guild_name());
    }

    // required int32 phy_strength = 42;
    if (has_phy_strength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phy_strength());
    }

    // required int32 extra_phy_strength = 43;
    if (has_extra_phy_strength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extra_phy_strength());
    }

    // required int32 time_to_recover_phy_strength = 44;
    if (has_time_to_recover_phy_strength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_to_recover_phy_strength());
    }

    // required int32 time_to_recover_extra_phy_strength = 45;
    if (has_time_to_recover_extra_phy_strength()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_to_recover_extra_phy_strength());
    }

    // required int32 renown = 46;
    if (has_renown()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->renown());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void db_role_info::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const db_role_info* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const db_role_info*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void db_role_info::MergeFrom(const db_role_info& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_tid()) {
      set_tid(from.tid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_gender()) {
      set_gender(from.gender());
    }
    if (from.has_job_type()) {
      set_job_type(from.job_type());
    }
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
    if (from.has_role_exp()) {
      set_role_exp(from.role_exp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_costume_tid()) {
      set_costume_tid(from.costume_tid());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_coupon()) {
      set_coupon(from.coupon());
    }
    if (from.has_diamond()) {
      set_diamond(from.diamond());
    }
    if (from.has_vip_end_ts()) {
      set_vip_end_ts(from.vip_end_ts());
    }
    if (from.has_vip_level()) {
      set_vip_level(from.vip_level());
    }
    if (from.has_map_id()) {
      set_map_id(from.map_id());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_map_x()) {
      set_map_x(from.map_x());
    }
    if (from.has_map_y()) {
      set_map_y(from.map_y());
    }
    if (from.has_last_map_id()) {
      set_last_map_id(from.last_map_id());
    }
    if (from.has_last_map_x()) {
      set_last_map_x(from.last_map_x());
    }
    if (from.has_last_map_y()) {
      set_last_map_y(from.last_map_y());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_server_id()) {
      set_server_id(from.server_id());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_create_time()) {
      set_create_time(from.create_time());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_team_create_time()) {
      set_team_create_time(from.team_create_time());
    }
    if (from.has_bag_size()) {
      set_bag_size(from.bag_size());
    }
    if (from.has_depot_size()) {
      set_depot_size(from.depot_size());
    }
    if (from.has_buddy_size()) {
      set_buddy_size(from.buddy_size());
    }
    if (from.has_lineup_size()) {
      set_lineup_size(from.lineup_size());
    }
    if (from.has_default_lineup_id()) {
      set_default_lineup_id(from.default_lineup_id());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_lineup_capacity()) {
      set_lineup_capacity(from.lineup_capacity());
    }
    if (from.has_login_time()) {
      set_login_time(from.login_time());
    }
    if (from.has_last_logoff_time()) {
      set_last_logoff_time(from.last_logoff_time());
    }
    if (from.has_login_ip()) {
      set_login_ip(from.login_ip());
    }
    if (from.has_instance_count()) {
      set_instance_count(from.instance_count());
    }
    if (from.has_instance_time()) {
      set_instance_time(from.instance_time());
    }
    if (from.has_guild_id()) {
      set_guild_id(from.guild_id());
    }
    if (from.has_guild_time()) {
      set_guild_time(from.guild_time());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_guild_name()) {
      set_guild_name(from.guild_name());
    }
    if (from.has_phy_strength()) {
      set_phy_strength(from.phy_strength());
    }
    if (from.has_extra_phy_strength()) {
      set_extra_phy_strength(from.extra_phy_strength());
    }
    if (from.has_time_to_recover_phy_strength()) {
      set_time_to_recover_phy_strength(from.time_to_recover_phy_strength());
    }
    if (from.has_time_to_recover_extra_phy_strength()) {
      set_time_to_recover_extra_phy_strength(from.time_to_recover_extra_phy_strength());
    }
    if (from.has_renown()) {
      set_renown(from.renown());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void db_role_info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void db_role_info::CopyFrom(const db_role_info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool db_role_info::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x00003fff) != 0x00003fff) return false;

  return true;
}

void db_role_info::Swap(db_role_info* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(uid_, other->uid_);
    std::swap(tid_, other->tid_);
    std::swap(name_, other->name_);
    std::swap(gender_, other->gender_);
    std::swap(job_type_, other->job_type_);
    std::swap(role_level_, other->role_level_);
    std::swap(role_exp_, other->role_exp_);
    std::swap(costume_tid_, other->costume_tid_);
    std::swap(title_, other->title_);
    std::swap(coin_, other->coin_);
    std::swap(coupon_, other->coupon_);
    std::swap(diamond_, other->diamond_);
    std::swap(vip_end_ts_, other->vip_end_ts_);
    std::swap(vip_level_, other->vip_level_);
    std::swap(map_id_, other->map_id_);
    std::swap(map_x_, other->map_x_);
    std::swap(map_y_, other->map_y_);
    std::swap(last_map_id_, other->last_map_id_);
    std::swap(last_map_x_, other->last_map_x_);
    std::swap(last_map_y_, other->last_map_y_);
    std::swap(flag_, other->flag_);
    std::swap(status_, other->status_);
    std::swap(server_id_, other->server_id_);
    std::swap(create_time_, other->create_time_);
    std::swap(team_id_, other->team_id_);
    std::swap(team_create_time_, other->team_create_time_);
    std::swap(bag_size_, other->bag_size_);
    std::swap(depot_size_, other->depot_size_);
    std::swap(buddy_size_, other->buddy_size_);
    std::swap(lineup_size_, other->lineup_size_);
    std::swap(default_lineup_id_, other->default_lineup_id_);
    std::swap(lineup_capacity_, other->lineup_capacity_);
    std::swap(login_time_, other->login_time_);
    std::swap(last_logoff_time_, other->last_logoff_time_);
    std::swap(login_ip_, other->login_ip_);
    std::swap(instance_count_, other->instance_count_);
    std::swap(instance_time_, other->instance_time_);
    std::swap(guild_id_, other->guild_id_);
    std::swap(guild_time_, other->guild_time_);
    std::swap(guild_name_, other->guild_name_);
    std::swap(phy_strength_, other->phy_strength_);
    std::swap(extra_phy_strength_, other->extra_phy_strength_);
    std::swap(time_to_recover_phy_strength_, other->time_to_recover_phy_strength_);
    std::swap(time_to_recover_extra_phy_strength_, other->time_to_recover_extra_phy_strength_);
    std::swap(renown_, other->renown_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata db_role_info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = db_role_info_descriptor_;
  metadata.reflection = db_role_info_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
