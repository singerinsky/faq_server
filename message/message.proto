import "db_message.proto";
import "tb_user.proto";

enum MSG_ACTION_TYPE
{
    MSG_REQUEST = 0;
    MSG_RESPONSE = 1;
    MSG_NOTIFY= 2;
}


enum MessageType
{
    //gate server start......
    MSG_SOCCER_PLAYER_INFO = 1;
    MSG_HEART_BEAT          = 2;//心跳
    MSG_CLIENT_LOGIN        = 3;//client login
    MSG_GATE_SERVER_REGISTER = 4;//gate server register
    MSG_INIT_CLIENT         = 5;
    MSG_CLIENT_MOVE     = 6;
    MSG_PLAYER_LEAVE_VIEW_NOTF = 7;
    MSG_LEAVE_PLAYERS_VIEW_NOTF = 8;
    MSG_PLAYER_ENTER_VIEW_NOTF = 9;
    MSG_ENTER_PLAYERS_VIEW_NOTF = 10;
    MSG_ENTER_NPCS_VIEW_NOTF = 11;
    MSG_LEAVE_NPC_NOTF = 12;
    MSG_PLAYER_ATTACK_NPC = 13;
}

message PosInfo 
{
    required int32 x = 1;
    required int32 y = 2;
}

message PlayerInfo
{
    required int32 player_id = 1;
    required string player_nickname = 2;
    required int32 player_level = 3;
    required int32 career_id = 4;
    required int32 player_status = 5;
    required PosInfo pos = 6;
}

message NpcInfo
{
    required int32 npc_id = 1;
    required string npc_nickname = 2;
    required int32  npc_level = 3;
    required int32  totoal_hp = 4;
    required int32  current_hp = 5; 
    required PosInfo pos = 6;
}

enum DbMessageType
{
    MSG_DB_COMMON   = 10000;
}

message ClientHeartBeatRequest
{
    required int32 client_time = 1;
}

message ClientHeartBeatResponse
{
    required int32 server_time = 1;
}


message ClientLoginRequest
{
    required int32 role_id = 1;
    required string token = 2;
}

message ClientLoginResponse
{
    required int32 ret = 1;
}

message ClientInitNotf
{
    required  int32 ret = 1;
    required  db_tb_user user_info = 2;
}

message ClientMoveRequest
{
    required int32 map_id = 1;
    required int32 pos_x = 2;
    required int32 pos_y = 3;
}

message ClientMoveResponse
{
    required int32 ret = 1;
    optional int32 map_id = 2;
    optional int32 pos_x = 3;
    optional int32 pos_y = 4;
}

message PlayerLeaveViewNotf
{
    required int32 player_id = 1;
}

message LeavePlayersViewNotf
{
    repeated int32 player_id = 1;
}

message LeaveNpcViewNotf
{
    required int32 npc_id = 1;
}

message PlayerEnterViewNotf
{
    required PlayerInfo player_info = 1;
}

message EnterPlayersViewNotf
{
    repeated PlayerInfo player_info = 1;
}

message EnterNpcsViewNotf
{
    repeated NpcInfo npc_info = 1;
}

message PlayerAttackNpcRequest
{
    required int32 npc_id = 1;
    required int32 attack_type = 2;
}

message PlayerAttackNpcResponse
{
    required int32 ret = 1;
}
