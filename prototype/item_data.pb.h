// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item_data.proto

#ifndef PROTOBUF_item_5fdata_2eproto__INCLUDED
#define PROTOBUF_item_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_item_5fdata_2eproto();
void protobuf_AssignDesc_item_5fdata_2eproto();
void protobuf_ShutdownFile_item_5fdata_2eproto();

class ItemData;
class ItemDataGroup;

// ===================================================================

class ItemData : public ::google::protobuf::Message {
 public:
  ItemData();
  virtual ~ItemData();

  ItemData(const ItemData& from);

  inline ItemData& operator=(const ItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemData& default_instance();

  void Swap(ItemData* other);

  // implements Message ----------------------------------------------

  ItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemData& from);
  void MergeFrom(const ItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 item_template_id = 1;
  inline bool has_item_template_id() const;
  inline void clear_item_template_id();
  static const int kItemTemplateIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_template_id() const;
  inline void set_item_template_id(::google::protobuf::int32 value);

  // required int32 item_type = 2;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::int32 item_type() const;
  inline void set_item_type(::google::protobuf::int32 value);

  // required bytes item_name = 3;
  inline bool has_item_name() const;
  inline void clear_item_name();
  static const int kItemNameFieldNumber = 3;
  inline const ::std::string& item_name() const;
  inline void set_item_name(const ::std::string& value);
  inline void set_item_name(const char* value);
  inline void set_item_name(const void* value, size_t size);
  inline ::std::string* mutable_item_name();
  inline ::std::string* release_item_name();
  inline void set_allocated_item_name(::std::string* item_name);

  // required int32 can_add = 4;
  inline bool has_can_add() const;
  inline void clear_can_add();
  static const int kCanAddFieldNumber = 4;
  inline ::google::protobuf::int32 can_add() const;
  inline void set_can_add(::google::protobuf::int32 value);

  // required int32 level_limit = 5;
  inline bool has_level_limit() const;
  inline void clear_level_limit();
  static const int kLevelLimitFieldNumber = 5;
  inline ::google::protobuf::int32 level_limit() const;
  inline void set_level_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ItemData)
 private:
  inline void set_has_item_template_id();
  inline void clear_has_item_template_id();
  inline void set_has_item_type();
  inline void clear_has_item_type();
  inline void set_has_item_name();
  inline void clear_has_item_name();
  inline void set_has_can_add();
  inline void clear_has_can_add();
  inline void set_has_level_limit();
  inline void clear_has_level_limit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 item_template_id_;
  ::google::protobuf::int32 item_type_;
  ::std::string* item_name_;
  ::google::protobuf::int32 can_add_;
  ::google::protobuf::int32 level_limit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_item_5fdata_2eproto();
  friend void protobuf_AssignDesc_item_5fdata_2eproto();
  friend void protobuf_ShutdownFile_item_5fdata_2eproto();

  void InitAsDefaultInstance();
  static ItemData* default_instance_;
};
// -------------------------------------------------------------------

class ItemDataGroup : public ::google::protobuf::Message {
 public:
  ItemDataGroup();
  virtual ~ItemDataGroup();

  ItemDataGroup(const ItemDataGroup& from);

  inline ItemDataGroup& operator=(const ItemDataGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemDataGroup& default_instance();

  void Swap(ItemDataGroup* other);

  // implements Message ----------------------------------------------

  ItemDataGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemDataGroup& from);
  void MergeFrom(const ItemDataGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ItemData item_data = 1;
  inline int item_data_size() const;
  inline void clear_item_data();
  static const int kItemDataFieldNumber = 1;
  inline const ::ItemData& item_data(int index) const;
  inline ::ItemData* mutable_item_data(int index);
  inline ::ItemData* add_item_data();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemData >&
      item_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemData >*
      mutable_item_data();

  // @@protoc_insertion_point(class_scope:ItemDataGroup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ItemData > item_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_item_5fdata_2eproto();
  friend void protobuf_AssignDesc_item_5fdata_2eproto();
  friend void protobuf_ShutdownFile_item_5fdata_2eproto();

  void InitAsDefaultInstance();
  static ItemDataGroup* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemData

// required int32 item_template_id = 1;
inline bool ItemData::has_item_template_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemData::set_has_item_template_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemData::clear_has_item_template_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemData::clear_item_template_id() {
  item_template_id_ = 0;
  clear_has_item_template_id();
}
inline ::google::protobuf::int32 ItemData::item_template_id() const {
  return item_template_id_;
}
inline void ItemData::set_item_template_id(::google::protobuf::int32 value) {
  set_has_item_template_id();
  item_template_id_ = value;
}

// required int32 item_type = 2;
inline bool ItemData::has_item_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemData::set_has_item_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemData::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemData::clear_item_type() {
  item_type_ = 0;
  clear_has_item_type();
}
inline ::google::protobuf::int32 ItemData::item_type() const {
  return item_type_;
}
inline void ItemData::set_item_type(::google::protobuf::int32 value) {
  set_has_item_type();
  item_type_ = value;
}

// required bytes item_name = 3;
inline bool ItemData::has_item_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemData::set_has_item_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemData::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemData::clear_item_name() {
  if (item_name_ != &::google::protobuf::internal::kEmptyString) {
    item_name_->clear();
  }
  clear_has_item_name();
}
inline const ::std::string& ItemData::item_name() const {
  return *item_name_;
}
inline void ItemData::set_item_name(const ::std::string& value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::kEmptyString) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
}
inline void ItemData::set_item_name(const char* value) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::kEmptyString) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(value);
}
inline void ItemData::set_item_name(const void* value, size_t size) {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::kEmptyString) {
    item_name_ = new ::std::string;
  }
  item_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ItemData::mutable_item_name() {
  set_has_item_name();
  if (item_name_ == &::google::protobuf::internal::kEmptyString) {
    item_name_ = new ::std::string;
  }
  return item_name_;
}
inline ::std::string* ItemData::release_item_name() {
  clear_has_item_name();
  if (item_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = item_name_;
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ItemData::set_allocated_item_name(::std::string* item_name) {
  if (item_name_ != &::google::protobuf::internal::kEmptyString) {
    delete item_name_;
  }
  if (item_name) {
    set_has_item_name();
    item_name_ = item_name;
  } else {
    clear_has_item_name();
    item_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 can_add = 4;
inline bool ItemData::has_can_add() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemData::set_has_can_add() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemData::clear_has_can_add() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemData::clear_can_add() {
  can_add_ = 0;
  clear_has_can_add();
}
inline ::google::protobuf::int32 ItemData::can_add() const {
  return can_add_;
}
inline void ItemData::set_can_add(::google::protobuf::int32 value) {
  set_has_can_add();
  can_add_ = value;
}

// required int32 level_limit = 5;
inline bool ItemData::has_level_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemData::set_has_level_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemData::clear_has_level_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemData::clear_level_limit() {
  level_limit_ = 0;
  clear_has_level_limit();
}
inline ::google::protobuf::int32 ItemData::level_limit() const {
  return level_limit_;
}
inline void ItemData::set_level_limit(::google::protobuf::int32 value) {
  set_has_level_limit();
  level_limit_ = value;
}

// -------------------------------------------------------------------

// ItemDataGroup

// repeated .ItemData item_data = 1;
inline int ItemDataGroup::item_data_size() const {
  return item_data_.size();
}
inline void ItemDataGroup::clear_item_data() {
  item_data_.Clear();
}
inline const ::ItemData& ItemDataGroup::item_data(int index) const {
  return item_data_.Get(index);
}
inline ::ItemData* ItemDataGroup::mutable_item_data(int index) {
  return item_data_.Mutable(index);
}
inline ::ItemData* ItemDataGroup::add_item_data() {
  return item_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemData >&
ItemDataGroup::item_data() const {
  return item_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemData >*
ItemDataGroup::mutable_item_data() {
  return &item_data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_item_5fdata_2eproto__INCLUDED
