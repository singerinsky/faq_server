// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: npc_data.proto

#ifndef PROTOBUF_npc_5fdata_2eproto__INCLUDED
#define PROTOBUF_npc_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_npc_5fdata_2eproto();
void protobuf_AssignDesc_npc_5fdata_2eproto();
void protobuf_ShutdownFile_npc_5fdata_2eproto();

class NpcData;
class NpcDataGroup;

// ===================================================================

class NpcData : public ::google::protobuf::Message {
 public:
  NpcData();
  virtual ~NpcData();

  NpcData(const NpcData& from);

  inline NpcData& operator=(const NpcData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcData& default_instance();

  void Swap(NpcData* other);

  // implements Message ----------------------------------------------

  NpcData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcData& from);
  void MergeFrom(const NpcData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 npc_id = 1;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);

  // required int32 npc_type = 2;
  inline bool has_npc_type() const;
  inline void clear_npc_type();
  static const int kNpcTypeFieldNumber = 2;
  inline ::google::protobuf::int32 npc_type() const;
  inline void set_npc_type(::google::protobuf::int32 value);

  // required bytes npc_name = 3;
  inline bool has_npc_name() const;
  inline void clear_npc_name();
  static const int kNpcNameFieldNumber = 3;
  inline const ::std::string& npc_name() const;
  inline void set_npc_name(const ::std::string& value);
  inline void set_npc_name(const char* value);
  inline void set_npc_name(const void* value, size_t size);
  inline ::std::string* mutable_npc_name();
  inline ::std::string* release_npc_name();
  inline void set_allocated_npc_name(::std::string* npc_name);

  // @@protoc_insertion_point(class_scope:NpcData)
 private:
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  inline void set_has_npc_type();
  inline void clear_has_npc_type();
  inline void set_has_npc_name();
  inline void clear_has_npc_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 npc_id_;
  ::google::protobuf::int32 npc_type_;
  ::std::string* npc_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_npc_5fdata_2eproto();
  friend void protobuf_AssignDesc_npc_5fdata_2eproto();
  friend void protobuf_ShutdownFile_npc_5fdata_2eproto();

  void InitAsDefaultInstance();
  static NpcData* default_instance_;
};
// -------------------------------------------------------------------

class NpcDataGroup : public ::google::protobuf::Message {
 public:
  NpcDataGroup();
  virtual ~NpcDataGroup();

  NpcDataGroup(const NpcDataGroup& from);

  inline NpcDataGroup& operator=(const NpcDataGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcDataGroup& default_instance();

  void Swap(NpcDataGroup* other);

  // implements Message ----------------------------------------------

  NpcDataGroup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NpcDataGroup& from);
  void MergeFrom(const NpcDataGroup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NpcData npc_data = 1;
  inline int npc_data_size() const;
  inline void clear_npc_data();
  static const int kNpcDataFieldNumber = 1;
  inline const ::NpcData& npc_data(int index) const;
  inline ::NpcData* mutable_npc_data(int index);
  inline ::NpcData* add_npc_data();
  inline const ::google::protobuf::RepeatedPtrField< ::NpcData >&
      npc_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::NpcData >*
      mutable_npc_data();

  // @@protoc_insertion_point(class_scope:NpcDataGroup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::NpcData > npc_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_npc_5fdata_2eproto();
  friend void protobuf_AssignDesc_npc_5fdata_2eproto();
  friend void protobuf_ShutdownFile_npc_5fdata_2eproto();

  void InitAsDefaultInstance();
  static NpcDataGroup* default_instance_;
};
// ===================================================================


// ===================================================================

// NpcData

// required int32 npc_id = 1;
inline bool NpcData::has_npc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NpcData::set_has_npc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NpcData::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NpcData::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 NpcData::npc_id() const {
  return npc_id_;
}
inline void NpcData::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// required int32 npc_type = 2;
inline bool NpcData::has_npc_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NpcData::set_has_npc_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NpcData::clear_has_npc_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NpcData::clear_npc_type() {
  npc_type_ = 0;
  clear_has_npc_type();
}
inline ::google::protobuf::int32 NpcData::npc_type() const {
  return npc_type_;
}
inline void NpcData::set_npc_type(::google::protobuf::int32 value) {
  set_has_npc_type();
  npc_type_ = value;
}

// required bytes npc_name = 3;
inline bool NpcData::has_npc_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NpcData::set_has_npc_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NpcData::clear_has_npc_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NpcData::clear_npc_name() {
  if (npc_name_ != &::google::protobuf::internal::kEmptyString) {
    npc_name_->clear();
  }
  clear_has_npc_name();
}
inline const ::std::string& NpcData::npc_name() const {
  return *npc_name_;
}
inline void NpcData::set_npc_name(const ::std::string& value) {
  set_has_npc_name();
  if (npc_name_ == &::google::protobuf::internal::kEmptyString) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void NpcData::set_npc_name(const char* value) {
  set_has_npc_name();
  if (npc_name_ == &::google::protobuf::internal::kEmptyString) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(value);
}
inline void NpcData::set_npc_name(const void* value, size_t size) {
  set_has_npc_name();
  if (npc_name_ == &::google::protobuf::internal::kEmptyString) {
    npc_name_ = new ::std::string;
  }
  npc_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NpcData::mutable_npc_name() {
  set_has_npc_name();
  if (npc_name_ == &::google::protobuf::internal::kEmptyString) {
    npc_name_ = new ::std::string;
  }
  return npc_name_;
}
inline ::std::string* NpcData::release_npc_name() {
  clear_has_npc_name();
  if (npc_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = npc_name_;
    npc_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void NpcData::set_allocated_npc_name(::std::string* npc_name) {
  if (npc_name_ != &::google::protobuf::internal::kEmptyString) {
    delete npc_name_;
  }
  if (npc_name) {
    set_has_npc_name();
    npc_name_ = npc_name;
  } else {
    clear_has_npc_name();
    npc_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// NpcDataGroup

// repeated .NpcData npc_data = 1;
inline int NpcDataGroup::npc_data_size() const {
  return npc_data_.size();
}
inline void NpcDataGroup::clear_npc_data() {
  npc_data_.Clear();
}
inline const ::NpcData& NpcDataGroup::npc_data(int index) const {
  return npc_data_.Get(index);
}
inline ::NpcData* NpcDataGroup::mutable_npc_data(int index) {
  return npc_data_.Mutable(index);
}
inline ::NpcData* NpcDataGroup::add_npc_data() {
  return npc_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::NpcData >&
NpcDataGroup::npc_data() const {
  return npc_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::NpcData >*
NpcDataGroup::mutable_npc_data() {
  return &npc_data_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_npc_5fdata_2eproto__INCLUDED
